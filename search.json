[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Quarto Blog",
    "section": "",
    "text": "Introduction to SciPy\n\n\n\n\n\nIntroduction Post\n\n\n\n\n\nFeb 25, 2025\n\n\nShreya Anbu\n\n\n\n\n\n\n\n\n\n\n\n\nSimple Visualisation\n\n\n\n\n\n\nML\n\n\n\n\n\n\n\n\n\nFeb 14, 2025\n\n\nNipun Batra\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome.html",
    "href": "posts/welcome.html",
    "title": "Introduction to SciPy",
    "section": "",
    "text": "Introduction to SciPy\n\n\nscipy.stats Module\nIt is a very helpful module used for statistical analysis and modeling.\n\nThis module contains a large number of probability distributions, summary and frequency statistics, correlation functions and statistical tests, masked statistics, kernel density estimation, quasi-Monte Carlo functionality, and more.\n\nYou can find more information on the official documentation page.\n\n\nInstallation\nIf you already have Python installed, you can install SciPy with pip by executing the following in a terminal/shell:\npython -m pip install scipy\nWhile using Jupyter Notebook or Google Colab, just use the following line before writing the main code:\nimport scipy\n\n\nComparison with PyTorch Distributions\nCanâ€™t both of these modules used for modeling distributions? Why do they exist as two separate models then?  PyTorch module provides more functionality for deep learning applications, whereas SciPy is more suitable for statistical modeling, having a more user-friendly interface for statisticians.\n\n\n\n\n\n\n\n\nFeature\nPyTorch Version\nScipPy Version\n\n\n\n\nCreating a Distribution\ntorch.distributions.Poisson(rate_param)\nscipy.stats.poisson(rate_param)\n\n\nCreating a Sample\ndist.sample((n, ))\ndist.rvs(size = n)\n\n\nCalculating PMF\ndist.log_prob(x).exp()\ndist.pmf(x)\n\n\n\nWe can see with the last comparison how SciPy has more direct, easy to read functions for obtaining basic values out of a distribution.\n\n\nDifferent Kinds of Distributions Available\nThere are a lot of things contained by the scipy.stats module, but we will be looking into the different kinds of distributions available for us to use. There are three kinds: continuous, discrete and multivariate. \n\nContinuous Distribution: Random variable can take on any value within a specified range, meaning there are infinitely many possible values between any two points;\nDiscrete Distribution: Random variable can only take on a finite number of distinct values, usually whole numbers;\nMultivariate Distribution: Describes the probability of multiple random variables occurring simultaneously, considering their potential relationships and correlations with each other.\n\nThere are tons of distributions available under each kind that we can use, which can be explored again in the official documentation.\n\n\n\nScreenshot from official documentation\n\n\nThe above image shows the start of the list of functionalities, which barely scratches the surface."
  },
  {
    "objectID": "posts/visualisation.html",
    "href": "posts/visualisation.html",
    "title": "Simple Visualisation",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\n\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nplt.plot(x, y)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto Template",
    "section": "",
    "text": "Quarto template Text!"
  }
]